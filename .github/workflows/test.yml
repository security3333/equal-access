# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: All branch testing

on: [ pull_request, merge_group ]

jobs:
###############################################################################
# Engine test
####
  accessibility-checker-engine-test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist
      
    - run: google-chrome --version
    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npx karma start karmaaction.conf.js --single-run --watch=false
      working-directory: accessibility-checker-engine
    - run: npx mocha ./test/mocha/help/help.test.js
      working-directory: accessibility-checker-engine
    - name: Upload rule listing
      uses: actions/upload-artifact@v1
      with:
        name: Rule listing
        path: accessibility-checker-engine/dist/help/rules.html


  act-results:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm run build:all
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist
    - run: npm install
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker
    - run: npm test
      working-directory: accessibility-checker/test-act-w3
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: ACT Text Results
        path: accessibility-checker/test-act-w3/act-report-v2.txt
        
###############################################################################
# Node basic test Windows
####
  accessibility-checker-test-basic-windows:
    runs-on: windows-2022

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: cmd /c "START /b node main.js"
        working-directory: rule-server/dist
        env: 
          __NODB__: true
      - run: ping 127.0.0.1 -n 6 > nul
      - run: netstat -o -n -a | findstr 9445
      # - run: curl -X GET "http://localhost:9445/rules/archives.json"
      - run: sleep 10

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Baselines/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Functions.Defined/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.ObjectStructure/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.assertionCompliance.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.Puppeteer.test.js
        working-directory: accessibility-checker
    
###############################################################################
# Node basic test
####
  accessibility-checker-test-basic:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [14.x, 18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Baselines/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Functions.Defined/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.ObjectStructure/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.assertionCompliance.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.Puppeteer.test.js
        working-directory: accessibility-checker

###############################################################################
# Node basic test
####
  accessibility-checker-test-basic2:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.URL.test.js
        working-directory: accessibility-checker

###############################################################################
# Node Selenium test
####
  accessibility-checker-test-selenium:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Slow1/aChecker.Scans/**/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Slow1/aChecker.ObjectStructure/**/*.test.js
        working-directory: accessibility-checker
        

###############################################################################
# Node Playwright test
####
  accessibility-checker-test-playwright:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist

    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker
    - run: npx playwright install chromium
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker

    - run: npx playwright test test/mocha/aChecker.Playwright/aChecker.Scans/*.mjs
      working-directory: accessibility-checker

###############################################################################
# Node WebdriverIO test
####
  accessibility-checker-test-wdio:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Latest Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: latest
      id: setup-chrome
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist

    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker

    - run: npm install
      working-directory: accessibility-checker/test/webdriverio
    - run: npm run wdio
      working-directory: accessibility-checker/test/webdriverio

###############################################################################
# Karma Tests
####
  karma-accessibility-checker-test:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]
          # test-file: [karma.conf1.js, karma.conf1b.js, karma.conf2.js, karma.conf2b.js, karma.conf3.js] // conf1 and conf2 fail a lot
          test-file: [karma.conf1b.js, karma.conf2b.js, karma.conf3.js]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: common/module
      - run: npm install
        working-directory: karma-accessibility-checker
      - run: npm run setup
        working-directory: karma-accessibility-checker
      - run: sleep 10
      - run: npm run build
        working-directory: karma-accessibility-checker
      - run: npm run installPlugin
        working-directory: karma-accessibility-checker
      - name: Test using configuration ${{ matrix.test-file }}
        run: npx karma start ${{ matrix.test-file }};
        working-directory: karma-accessibility-checker

###############################################################################
# Cypress test
####
  cypress-checker-test-basic:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: common/module
      - run: npm install
        working-directory: cypress-accessibility-checker
      - run: npm run build:common
        working-directory: cypress-accessibility-checker
      - run: npm run test:start-http &
        working-directory: cypress-accessibility-checker
      - run: npx cypress run
        working-directory: cypress-accessibility-checker/test

###############################################################################
# Extension Build verification and test
####
  extension-test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker-extension
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.min.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: cp -f ./manifest_Chrome.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Chrome
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip
    - run: cp -f ./manifest_Firefox.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Firefox
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip
    - name: Jest tests
      run: npm test
      working-directory: accessibility-checker-extension

  rule-deploy:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: gitactions/publish/rules.sh
      env: 
        BLUEMIX_USERID: apikey
        BLUEMIX_PASS: ${{ secrets.BLUEMIX_PASS }}
        CLOUD_PWD: ${{ secrets.CLOUD_PWD }}
        TRAVIS_BRANCH: sandbox
            - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v4.0.0
  with:
    # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # optional
    # Optional quality of the build. The possible values are: daily, signed, validated, preview, ga.
    dotnet-quality: # optional
    # Optional global.json location, if your global.json isn't located in the root of the repo.
    global-json-file: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Optional input to enable caching of the NuGet global-packages folder
    cache: # optional
    # Used to specify the path to a dependency file: packages.lock.json. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                      - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.2
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                   - name: Close Stale Issues
  uses: actions/stale@v9.0.0
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The reason to use when closing an issue.
    close-issue-reason: # optional, default is not_planned
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is 
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is 
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Exempt draft pull requests from being marked as stale. Default to false.
    exempt-draft-pr: # optional, default is false
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    # A comma delimited list of labels to add when an issue or pull request becomes unstale.
    labels-to-add-when-unstale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes stale.
    labels-to-remove-when-stale: # optional, default is 
    # A comma delimited list of labels to remove when an issue or pull request becomes unstale.
    labels-to-remove-when-unstale: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the issues and pull requests.
    ignore-updates: # optional, default is false
    # Any update (update/comment) can reset the stale idle time on the issues. Override "ignore-updates" option regarding only the issues.
    ignore-issue-updates: # optional, default is 
    # Any update (update/comment) can reset the stale idle time on the pull requests. Override "ignore-updates" option regarding only the pull requests.
    ignore-pr-updates: # optional, default is 
    # Only the issues or the pull requests with an assignee will be marked as stale automatically.
    include-only-assigned: # optional, default is false
                - name: Download a Build Artifact
  uses: actions/download-artifact@v4.1.4
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}
            - name: First interaction
  uses: actions/first-interaction@v1.3.0
  with:
    # Token for the repository. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # Comment to post on an individual's first issue
    issue-message: # optional
    # Comment to post on an individual's first pull request
    pr-message: # optional
          
                   
