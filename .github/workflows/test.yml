# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: All branch testing

on: [ pull_request, merge_group ]

jobs:
###############################################################################
# Engine test
####
  accessibility-checker-engine-test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist
      
    - run: google-chrome --version
    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npx karma start karmaaction.conf.js --single-run --watch=false
      working-directory: accessibility-checker-engine
    - run: npx mocha ./test/mocha/help/help.test.js
      working-directory: accessibility-checker-engine
    - name: Upload rule listing
      uses: actions/upload-artifact@v1
      with:
        name: Rule listing
        path: accessibility-checker-engine/dist/help/rules.html


  act-results:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm run build:all
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist
    - run: npm install
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker
    - run: npm test
      working-directory: accessibility-checker/test-act-w3
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: ACT Text Results
        path: accessibility-checker/test-act-w3/act-report-v2.txt
        
###############################################################################
# Node basic test Windows
####
  accessibility-checker-test-basic-windows:
    runs-on: windows-2022

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: cmd /c "START /b node main.js"
        working-directory: rule-server/dist
        env: 
          __NODB__: true
      - run: ping 127.0.0.1 -n 6 > nul
      - run: netstat -o -n -a | findstr 9445
      # - run: curl -X GET "http://localhost:9445/rules/archives.json"
      - run: sleep 10

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Baselines/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Functions.Defined/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.ObjectStructure/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.assertionCompliance.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.Puppeteer.test.js
        working-directory: accessibility-checker
    
###############################################################################
# Node basic test
####
  accessibility-checker-test-basic:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [14.x, 18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Baselines/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Functions.Defined/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.ObjectStructure/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.assertionCompliance.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.Puppeteer.test.js
        working-directory: accessibility-checker

###############################################################################
# Node basic test
####
  accessibility-checker-test-basic2:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.Content.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Fast/aChecker.Scans/aChecker.URL.test.js
        working-directory: accessibility-checker

###############################################################################
# Node Selenium test
####
  accessibility-checker-test-selenium:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: accessibility-checker
        
      - run: npm run build
        working-directory: accessibility-checker

      - run: npx mocha -R dot test/mocha/aChecker.Slow1/aChecker.Scans/**/*.test.js
        working-directory: accessibility-checker
      - run: npx mocha -R dot test/mocha/aChecker.Slow1/aChecker.ObjectStructure/**/*.test.js
        working-directory: accessibility-checker
        

###############################################################################
# Node Playwright test
####
  accessibility-checker-test-playwright:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist

    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker
    - run: npx playwright install chromium
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker

    - run: npx playwright test test/mocha/aChecker.Playwright/aChecker.Scans/*.mjs
      working-directory: accessibility-checker

###############################################################################
# Node WebdriverIO test
####
  accessibility-checker-test-wdio:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Latest Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: latest
      id: setup-chrome
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: node main.js &
      working-directory: rule-server/dist
    - run: sleep 10
      working-directory: rule-server/dist

    - run: npm install
      working-directory: accessibility-checker-engine
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker
    - run: npm run build
      working-directory: accessibility-checker

    - run: npm install
      working-directory: accessibility-checker/test/webdriverio
    - run: npm run wdio
      working-directory: accessibility-checker/test/webdriverio

###############################################################################
# Karma Tests
####
  karma-accessibility-checker-test:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]
          # test-file: [karma.conf1.js, karma.conf1b.js, karma.conf2.js, karma.conf2b.js, karma.conf3.js] // conf1 and conf2 fail a lot
          test-file: [karma.conf1b.js, karma.conf2b.js, karma.conf3.js]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: common/module
      - run: npm install
        working-directory: karma-accessibility-checker
      - run: npm run setup
        working-directory: karma-accessibility-checker
      - run: sleep 10
      - run: npm run build
        working-directory: karma-accessibility-checker
      - run: npm run installPlugin
        working-directory: karma-accessibility-checker
      - name: Test using configuration ${{ matrix.test-file }}
        run: npx karma start ${{ matrix.test-file }};
        working-directory: karma-accessibility-checker

###############################################################################
# Cypress test
####
  cypress-checker-test-basic:
      runs-on: ubuntu-22.04

      strategy:
        matrix:
          node-version: [18.x]

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm install
        working-directory: rule-server
      - run: npm run build
        working-directory: rule-server
      - run: node main.js &
        working-directory: rule-server/dist
      - run: sleep 10
        working-directory: rule-server/dist

      - run: npm install
        working-directory: accessibility-checker-engine
      - run: npm install
        working-directory: report-react
      - run: npm install
        working-directory: common/module
      - run: npm install
        working-directory: cypress-accessibility-checker
      - run: npm run build:common
        working-directory: cypress-accessibility-checker
      - run: npm run test:start-http &
        working-directory: cypress-accessibility-checker
      - run: npx cypress run
        working-directory: cypress-accessibility-checker/test

###############################################################################
# Extension Build verification and test
####
  extension-test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: report-react
    - run: npm install
      working-directory: accessibility-checker-extension
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: sed -i'.old' -e "s/[\"|']use strict[\"|']//g" ./exceljs.min.js
      working-directory: accessibility-checker-extension/node_modules/exceljs/dist
    - run: cp -f ./manifest_Chrome.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Chrome
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip
    - run: cp -f ./manifest_Firefox.json ./src/manifest.json
      working-directory: accessibility-checker-extension
    - run: npm run package:browser
      working-directory: accessibility-checker-extension
    - name: Upload packed extension
      uses: actions/upload-artifact@v1
      with:
        name: accessibility-checker-extension for Firefox
        path: accessibility-checker-extension/package/accessibility-checker-extension.zip
    - name: Jest tests
      run: npm test
      working-directory: accessibility-checker-extension

  rule-deploy:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: rule-server
    - run: npm run build
      working-directory: rule-server
    - run: gitactions/publish/rules.sh
      env: 
        BLUEMIX_USERID: apikey
        BLUEMIX_PASS: ${{ secrets.BLUEMIX_PASS }}
        CLOUD_PWD: ${{ secrets.CLOUD_PWD }}
        TRAVIS_BRANCH: sandbox
            - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.3.1
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
                 - name: Setup Java JDK
  uses: actions/setup-java@v4.2.1
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: # optional
    # The path to the `.java-version` file. See examples of supported syntax in README file
    java-version-file: # optional
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package (defaults to the action runner's architecture)
    architecture: # optional
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
    cache: # optional
    # The path to a dependency file: pom.xml, build.gradle, build.sbt, etc. This option can be used with the `cache` option. If this option is omitted, the action searches for the dependency file in the entire repository. This option supports wildcards and a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Workaround to pass job status to post job step. This variable is not intended for manual setting
    job-status: # optional, default is ${{ job.status }}
    # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-id: # optional
    # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-vendor: # optional
                 - name: Setup Go environment
  uses: actions/setup-go@v5.0.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
                      - name: Download a Build Artifact
  uses: actions/download-artifact@v4.1.4
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}
                  - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v4.0.0
  with:
    # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # optional
    # Optional quality of the build. The possible values are: daily, signed, validated, preview, ga.
    dotnet-quality: # optional
    # Optional global.json location, if your global.json isn't located in the root of the repo.
    global-json-file: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Optional input to enable caching of the NuGet global-packages folder
    cache: # optional
    # Used to specify the path to a dependency file: packages.lock.json. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                        
